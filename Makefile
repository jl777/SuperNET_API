# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GNU Makefile based on shared rules provided by the Native Client SDK.
# See README.Makefiles for more details.

#pepper_44/toolchain/mac_x86_newlib/x86_64-nacl/usr/lib

VALID_TOOLCHAINS := pnacl newlib glibc clang-newlib mac 

NACL_SDK_ROOT ?= /home/alex/Downloads/nacl_sdk/pepper_44

TARGET = SuperNET_API

EXTRA= -D__PNACL

include $(NACL_SDK_ROOT)/tools/common.mk

CHROME_ARGS += --allow-nacl-socket-api=localhost

DEPS = nacl_io
LIBS = jl777 pangea nanomsg crypto777 ccoin curl ssl crypto z pthread ppapi nacl_io
PLIBS = nanoagent curl pthread ppapi nacl_io
PNACL_LDFLAGS := -L./lib/pnacl/Release


CFLAGS = -Wall -D__PNACL -fno-strict-aliasing -Ipicocoin/include

SOURCES = handlers.c nanosrc/core/global.c nacl_io_demo.c queue.c SuperNET.c plugins/InstantDEX/InstantDEX_main.c plugins/common/prices777.c plugins/peggy/quotes777.c plugins/peggy/peggy777.c plugins/common/opreturn777.c  plugins/common/txind777.c plugins/common/teleport777.c  plugins/KV/ramkv777.c plugins/agents/shuffle777.c 

# Build rules generated by macros from common.mk:

$(foreach dep,$(DEPS),$(eval $(call DEPEND_RULE,$(dep))))
$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))
